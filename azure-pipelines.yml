trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  openCoverFileName: 'coverage.opencover.xml'
  coberturaFileName: 'coverage.cobertura.xml'

steps:
    
- task: SonarCloudPrepare@1
  displayName: Configuring SonarCloud
  inputs:
    SonarCloud: 'SonarCluodConnection'
    organization: 'afborgesdev-github'
    scannerMode: 'MSBuild'
    projectKey: 'afborgesDev_CrawlerWave'
    projectName: 'Crawler Wave'

- task: DotNetCoreCLI@2
  displayName: Building
  continueOnError: false
  inputs:
    command: 'build'
    arguments: '-c $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Runing tests'
  continueOnError: false
  inputs:
    command: test
    projects: '**/*.Test/*.csproj'
    arguments: '-c $(buildConfiguration) --no-restore --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=\"cobertura,opencover\"'

- task: PublishCodeCoverageResults@1
  displayName: 'Publishing coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/*.Test/$(coberturaFileName)'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'src/CrabsWave.Test/'
    Contents: '$(openCoverFileName)'
    TargetFolder: '$(Build.SourcesDirectory)/TestResults/Coverage/'
    OverWrite: true
  displayName: 'Copy coverage to TestResults'

- task: SonarCloudAnalyze@1
  displayName: Runing SonarCloudAnalyze

- task: SonarCloudPublish@1
  displayName: Pushing SonarCloudAnalyze
  inputs:
    pollingTimeoutSec: '300'